# 🛡️ Cyber Threat Detection - ML Pipeline

![Python Version](https://img.shields.io/badge/python-3.10%2B-blue)
![MLflow](https://img.shields.io/badge/MLflow-2.3%2B-orange)
![License](https://img.shields.io/badge/license-MIT-green)

> Machine learning pipeline for detecting network anomalies and cyber threats

## 📂 Repository Structure

```text
ml/
├── configs/               # Configuration files
│   ├── features.json      # Feature definitions
│   └── training.yml       # Hyperparameters
├── datasets/              # Data artifacts
│   ├── processed/         # Cleaned datasets
│   └── raw/               # Original data (immutable)
├── training/              # Model development
│   ├── train_model.py     # Main training script
│   └── hyperparameter_tuning.py
├── evaluation/            # Model validation
│   ├── evaluate_model.py
│   └── adversarial_testing.py
├── models/                # Serialized models
│   ├── production/        # Deployed models
│   └── experimental/      # Candidate models
└── monitoring/            # Production monitoring
    ├── drift_detection.py
    └── performance_logging.py
```

## 🚀 Quick Start

### Prerequisites
```bash
conda create -n cyber-ml python=3.10
conda activate cyber-ml
pip install -r requirements-ml.txt
```

### Training Example
```bash
python ml/training/train_model.py \
  --data ml/datasets/processed/v1.parquet \
  --config ml/configs/production.yml \
  --output-dir ml/models/experimental/
```
## 🔧 Key Components
### Data Processing
```python
from ml.preprocessing import CyberDataProcessor

processor = CyberDataProcessor()
df_clean = processor.fit_transform(raw_data)
```

### Model Training
```python
from ml.training import ModelTrainer

trainer = ModelTrainer()
best_model = trainer.train(
    data_path="ml/datasets/processed/train.parquet",
    model_type="xgboost"
)
```


